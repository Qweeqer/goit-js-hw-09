{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAE4C,MAAtCC,EAAUC,SAASC,cAAc,SAEsC,SAApEC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAmBuC,SAArCO,GAAQR,SAAEA,EAAQC,MAAEA,IAC3BP,EAAAe,OAAOC,QAAQ,sBAAoBV,QAAiBC,OAGR,SAArCU,GAAUX,SAAEA,EAAQC,MAAEA,IAC7BP,EAAAe,OAAOG,QAAQ,uBAAqBZ,QAAiBC,OAGrBL,EAA1BiB,iBAAiB,UAtBO,SAAdC,GAChBA,EAAMC,iBACN,IAAIC,EAAW,IAAIC,SAASrB,GAC5BoB,EAASE,SAAQ,CAACC,EAAOC,IAAQJ,EAASI,GAAOC,OAAOF,KAE3CvB,EAAL0B,QAG+B,IAAlC,IAAItB,EAAW,EAAGA,GAAYgB,EAASO,OAAQvB,GAAY,EAC9DD,EAAcC,EAAUgB,EAASf,OAAOuB,KAAKb,GAAWc,MAAMjB,GAC9DQ,EAASf,OAASe,EAASU","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// Отримуємо посилання на форму для додавання слухача\nconst formRef = document.querySelector('.form');\n// Функція для створення проміса, приймає два параметри: номер створеного проміса (position) та затримку (delay)\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n};\n\n// Функція-колбек (виклик при натісканні submit)\nfunction onSubmit(event) {\n  event.preventDefault();\n  let dataForm = new FormData(formRef)\n  dataForm.forEach((value, key) => dataForm[key] = Number(value));\n  // Очищення форми\n  formRef.reset();\n\n  // В циклі for викликаемо функцію яка створює проміс\n  for (let position = 1; position <= dataForm.amount; position += 1) {\n    createPromise(position, dataForm.delay).then(onSuccess).catch(onError);\n    dataForm.delay += dataForm.step;\n  };\n};\n// Функція викликається: для метода catch, коли проміс повертає reject\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n// Функція викликається: для метода then, коли проміс повертає resolve\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n// Додаємо слухача на форму при натисканні submit\nformRef.addEventListener('submit', onSubmit);\n\n\n\n// ---------------Чернетка-------------\n// Функція-колбек (виклик при натісканні submit)\n// function onSubmit(event) {\n//   event.preventDefault();\n  // const form = event.currentTarget;\n  // for (const [key, value] of dataForm.entries()) {\n  //   dataForm[key] = Number(value);\n  // }\n\n\n\n\n// В циклі for викликаемо функцію яка створює проміс\n  // let dataFormElements = []\n  // dataFormElements.map((step, delay, amount) => dataForm.delay += dataForm.step);\n  //   createPromise(step, delay).then(onSuccess).catch(onError);\n  // console.log(dataForm);\n  // console.log(\"delay\",dataForm.delay);\n  // console.log(\"step\", dataForm.step);\n  // console.log(\"amount\", dataForm.amount);"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$onError","Notify","failure","$47d4ff9957288465$var$onSuccess","success","addEventListener","event","preventDefault","dataForm","FormData","forEach","value","key","Number","reset","amount","then","catch","step"],"version":3,"file":"03-promises.ec7387be.js.map"}