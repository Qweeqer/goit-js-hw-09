{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAE4C,MAAtCC,EAAUC,SAASC,cAAc,SAEsC,SAApEC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQK,GAERJ,EAAOK,KAERR,MAqBuC,SAArCQ,GAAQT,SAAEA,EAAQC,MAAEA,IAC3BP,EAAAgB,OAAOC,QAAQ,sBAAoBX,QAAiBC,OAGR,SAArCO,GAAUR,SAAEA,EAAQC,MAAEA,IAC7BP,EAAAgB,OAAOE,QAAQ,uBAAqBZ,QAAiBC,OAGvDL,EAAQiB,iBAAiB,UAzBO,SAAdC,GAChBA,EAAMC,iBAEN,MAAMC,EAAW,IAAIC,SAASrB,GAC9B,IAAK,MAAOsB,EAAKC,KAAUH,EAASI,UAClCJ,EAASE,GAAOG,OAAOF,GAGZvB,EAAL0B,QAE+B,IAAlC,IAAItB,EAAW,EAAGA,GAAYgB,EAASO,OAAQvB,GAAY,EAC9DD,EAAcC,EAAUgB,EAASf,OAAOuB,KAAKhB,GAAWiB,MAAMhB,GAC9DO,EAASf,OAASe,EAASU,KAC3BC,QAAQC,IAAIZ","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// Отримуємо посилання на форму для додавання слухача\nconst formRef = document.querySelector('.form');\n// Функція для створення проміса, приймає два параметри: номер створеного проміса (position) та затримку (delay)\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(onSuccess)\n      } else {\n        reject(onError)\n      }\n    }, delay);\n  });\n};\n// Функція-колбек (виклик при натісканні submit)\nfunction onSubmit(event) {\n  event.preventDefault();\n  // const form = event.currentTarget;\n  const dataForm = new FormData(formRef);\n  for (const [key, value] of dataForm.entries()) {\n    dataForm[key] = Number(value);\n  }\n  // Очищення форми\n  formRef.reset();\n  // В циклі for викликаемо функцію яка створює проміс\n  for (let position = 1; position <= dataForm.amount; position += 1) {\n    createPromise(position, dataForm.delay).then(onSuccess).catch(onError);\n    dataForm.delay += dataForm.step;\n    console.log(dataForm);\n  };\n};\n// Функція викликається: для метода catch, коли проміс повертає reject\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n// Функція викликається: для метода then, коли проміс повертає resolve\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n// Додаємо слухача на форму при натисканні submit\nformRef.addEventListener('submit', onSubmit);"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$onSuccess","$47d4ff9957288465$var$onError","Notify","failure","success","addEventListener","event","preventDefault","dataForm","FormData","key","value","entries","Number","reset","amount","then","catch","step","console","log"],"version":3,"file":"03-promises.a11a9a40.js.map"}